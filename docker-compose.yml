services:
  iam:
    container_name: iam-microservice
    build:
      context: .
      dockerfile: ./apps/iam/Dockerfile
      target: development
    command: npm run start:dev iam
    env_file:
      - ./apps/iam/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    depends_on:
      - iam-postgres-db
      - redis
      - rabbitmq
  iam-postgres-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: iam-db
    volumes:
      - iam-postgres-data:/var/lib/postgresql/data

  travel-package:
    container_name: travel-package-microservice
    build:
      context: .
      dockerfile: ./apps/travel-package/Dockerfile
      target: development
    command: npm run start:dev travel-package
    env_file:
      - ./apps/travel-package/.env
    ports:
      - '3002:3002'
    volumes:
      - .:/usr/src/app
    depends_on:
      - travel-package-postgres-db
      - rabbitmq
  travel-package-postgres-db:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: travel-package-db
    volumes:
      - travel-package-postgres-data:/var/lib/postgresql/data

  proposal:
    container_name: proposal-microservice
    build:
      context: .
      dockerfile: ./apps/proposal/Dockerfile
      target: development
    command: npm run start:dev proposal
    env_file:
      - ./apps/proposal/.env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app
    depends_on:
      - proposal-postgres-db
      - rabbitmq
  proposal-postgres-db:
    image: postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: proposal-db
    volumes:
      - proposal-postgres-data:/var/lib/postgresql/data

  payment:
    container_name: payment-microservice
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: development
    command: npm run start:dev payment
    env_file:
      - ./apps/payment/.env
    volumes:
      - .:/usr/src/app
    depends_on:
      - rabbitmq

  redis:
    image: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "pass123" ]
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning/datasources

volumes:
  iam-postgres-data:
  travel-package-postgres-data:
  proposal-postgres-data:
  prom_data: