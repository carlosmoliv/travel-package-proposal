services:
  iam:
    container_name: iam-microservice
    build:
      context: .
      dockerfile: ./apps/iam/Dockerfile
      target: development
    command: npm run start:dev iam
    env_file:
      - ./apps/iam/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    depends_on:
      - iam-postgres-db
      - redis
      - rabbitmq
  iam-postgres-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: iam-db
    volumes:
      - iam-postgres-data:/var/lib/postgresql/data

  travel-package:
    container_name: travel-package-microservice
    build:
      context: .
      dockerfile: ./apps/travel-package/Dockerfile
      target: development
    command: npm run start:dev travel-package
    env_file:
      - ./apps/travel-package/.env
    ports:
      - '3002:3002'
    volumes:
      - .:/usr/src/app
    depends_on:
      - travel-package-postgres-db
      - rabbitmq
  travel-package-postgres-db:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: travel-package-db
    volumes:
      - travel-package-postgres-data:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # e2e / integration tests
#  test-db:
#    image: postgres
#    ports:
#      - "5440:5432"
#    environment:
#      POSTGRES_PASSWORD: pass123
#      POSTGRES_DB: travel-package-proposal-db
#  test-redis:
#    image: redis
#    ports:
#      - "6380:6379"

volumes:
  iam-postgres-data:
  travel-package-postgres-data: